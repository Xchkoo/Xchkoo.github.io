<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>bilibili［不负责评测第Ⅰ期］500元价位无敌手—寒冰赛睿5</title>
    <url>/2021-02-01-1/2021/02/01/</url>
    <content><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=48622792&cid=85186403&page=1&danmaku=0" allowfullscreen="allowfullscreen" width="100%" height="500" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>

<p> <a href="http://xchkoo.github.io/2021-02-01-1/2021/02/01/">http://xchkoo.github.io/2021-02-01-1/2021/02/01/</a> <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      <categories>
        <category>bilibili</category>
        <category>不负责评测</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
        <tag>不负责评测</tag>
      </tags>
  </entry>
  <entry>
    <title>很久以前的dt炮搭建笔记</title>
    <url>/2021-02-26/2021/02/26/</url>
    <content><![CDATA[<hr>
<p><img src="/2021-02-26/2021/02/26/2.png" alt="2"><br><img src="/2021-02-26/2021/02/26/1.png" alt="1"></p>
<hr>
<blockquote><p>不是那个dt嗷wwww</p>
<footer><strong>————Xchkoo</strong></footer></blockquote>

<p> <a href="http://xchkoo.github.io/2021-02-26/2021/02/26/">http://xchkoo.github.io/2021-02-26/2021/02/26/</a> <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      <categories>
        <category>俄罗斯方块</category>
        <category>攻略</category>
      </categories>
      <tags>
        <tag>俄罗斯方块</tag>
        <tag>攻略</tag>
      </tags>
  </entry>
  <entry>
    <title>[归并排序]luogu-P1908逆序对 题解</title>
    <url>/MergeSort/2021/02/04/</url>
    <content><![CDATA[<h3 id="！！！如果无法显示模板效果，请刷新网页一下！！！"><a href="#！！！如果无法显示模板效果，请刷新网页一下！！！" class="headerlink" title="！！！如果无法显示模板效果，请刷新网页一下！！！"></a>！！！如果无法显示模板效果，请刷新网页一下！！！</h3><h2 id="מּ-מּ-！-color-darkviolet-归并排序"><a href="#מּ-מּ-！-color-darkviolet-归并排序" class="headerlink" title="( מּ,_מּ)！$\color{darkviolet}{归并排序}$"></a>( מּ,_מּ)！$\color{darkviolet}{归并排序}$</h2><h4 id="1-归并排序简介"><a href="#1-归并排序简介" class="headerlink" title="1. 归并排序简介"></a>1. 归并排序简介</h4><blockquote>
<p>归并排序（Merge Sort）是建立在归并操作上的一种有效，稳定的排序算法，$\color{red}{该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。}$将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为二路归并。</p><p align="right">————百度百科</p><p></p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">复杂度</th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">时间复杂度</td>
<td align="center">$\mathcal{O}(nlogn)$</td>
</tr>
<tr>
<td align="center">空间复杂度</td>
<td align="center">$\mathcal{T}(n)$</td>
</tr>
</tbody></table>
<p><img src="/MergeSort/2021/02/04/mergesort.webp" alt="原理图解"></p>
<p>归并排序简要概括一下就是————两个步骤：二分 -&gt; 合并(排序的重要步骤)</p>
<h4 id="2-归并排序原理"><a href="#2-归并排序原理" class="headerlink" title="2. 归并排序原理"></a>2. 归并排序原理</h4><h5 id="1-二分"><a href="#1-二分" class="headerlink" title="1. 二分"></a>1. 二分</h5><p>正如简介所言，归并排序函数<code>void msort(int b,int e)</code>是一个递归函数。</p>
<pre><code class="cpp">        if(b == e)
        return;
    int mid=(b+e)/2,i=b,j=mid+1,k=b;
    msort(b,mid),msort(mid+1,e);
    //理解递归只需知道你设计这个递归函数的功能，中间的递归过程就不用管了。
</code></pre>
<p>这一步进行递归二分数组直到不可再分 即b(begin)指针和e(end)指针指向同一位置。</p>
<ol start="2">
<li>合并<pre><code class="cpp">while(i &lt;= mid&amp;&amp;j &lt;= e)
     if(o[i]&lt;=o[j])
         tem[k++]=o[i++];
     else
         tem[k++]=o[j++];
</code></pre>
</li>
</ol>
<pre><code>i,j是指向左数组和右数组的开头的指针
在合并时我们遵守一个原则：将左边的和右边的元素比较，谁小谁先进数组。
逻辑上分为：
&lt;center&gt;
$\color&#123;green&#125;&#123;1. i &lt; j 且 a[i] &lt; a[j]时 我们将i指向的元素保存至临时数组tem中。&#125;$
$\color&#123;green&#125;&#123;2. i &lt; j 且 a[i] &gt; a[j]时 我们将j指向的元素保存至临时数组tem中。&#125;$
&lt;/center&gt;
可是这样轮次放置，可能会出现一边的数组先轮完了，这就是第2、3个while，轮完就意味着不需要再比较了，可以直接放入。
&lt;center&gt;$\color&#123;green&#125;&#123;3. i &lt;= mid 的情况 就直接tem[k++]=o[i++];&#125;$
$\color&#123;green&#125;&#123;   j &lt;= e 的情况   tem[k++]=o[j++];&#125;$&lt;/center&gt;
~~~ cpp
    while(i&lt;=mid)
        tem[k++]=o[i++];
    while(j&lt;=e)
        tem[k++]=o[j++];
</code></pre>
<p>别忘了我们的数组是放在临时数组里的，结束时要放回主数组，毕竟接下来还要递归。</p>
<pre><code class="cpp">    for(int l=b;l&lt;=e;l++)
        o[l]=tem[l];
</code></pre>
<h4 id="3-原题-amp-AC代码"><a href="#3-原题-amp-AC代码" class="headerlink" title="3. 原题&amp;AC代码"></a>3. <a href="https://www.luogu.com.cn/problem/P1908">原题</a>&amp;AC代码</h4><p>解题思路:<br>逆序对就是$1，2，3，4，5$这样顺的数组中出了一个二五仔（如 ${1，2，3，5，4}$ 的情况 ${5，4}$ 就算一组逆序对）,那么二五仔的数量就是我们在归并时else的情况的集合。</p>
<pre><code class="cpp">while(i &lt;= mid&amp;&amp;j &lt;= e)
        if(o[i]&lt;=o[j])
            tem[k++]=o[i++];
        else
            tem[k++]=o[j++],ans+=mid-i+1;
</code></pre>
<p>所以，逆序对的数量实际上就是我们将数组归并排序时发生交换的元素数量。<br>只要在归并排序的源码上加上计算ans的步骤就行了。</p>
<p>$\color{red}{AC代码}$：</p>
<pre><code class="c++">/*
 * © Copyright 2021 Xchkoo All rights reserved.
 * Author: Xchkoo
 * Date: 2021-02-04 5:40
 * LISENSE: CC v4.0 BY-SA https://creativecommons.org/licenses/by-sa/4.0/deed.zh
 * Remark: Thanks for viewing XD
 * Welcome to my blog -&gt; Xchkoo.top 
 */
#include&lt;iostream&gt;
#define N 500010
using namespace std;
int n;
int o[N];//Main
int tem[N];//Temporary
long long ans;

void msort(int b,int e)// b = begin e = end
&#123;
    if(b == e)
        return;
    int mid=(b+e)/2,i=b,j=mid+1,k=b;
    msort(b,mid),msort(mid+1,e);
    while(i &lt;= mid&amp;&amp;j &lt;= e)
        if(o[i]&lt;=o[j])
            tem[k++]=o[i++];
        else
            tem[k++]=o[j++],ans+=mid-i+1;//count answer
    while(i&lt;=mid)
        tem[k++]=o[i++];
    while(j&lt;=e)
        tem[k++]=o[j++];
    for(int l=b;l&lt;=e;l++)
        o[l]=tem[l];
&#125;           

int main()
&#123;
    ios::sync_with_stdio(false);
    cin &gt;&gt; n;
    for(int i=1;i&lt;=n;i++)&#123;
        cin &gt;&gt; o[i];
    &#125;
    msort(1,n);
    cout &lt;&lt; ans;
    return 0;
&#125;
</code></pre>
<p> <a href="http://xchkoo.github.io/MergeSort/2021/02/04/">http://xchkoo.github.io/MergeSort/2021/02/04/</a> 本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      <categories>
        <category>排序</category>
        <category>归并排序</category>
      </categories>
      <tags>
        <tag>排序</tag>
        <tag>归并排序</tag>
        <tag>luogu-P1908 逆序对</tag>
        <tag>题解</tag>
        <tag>Mergesort</tag>
      </tags>
  </entry>
  <entry>
    <title>ReDen it</title>
    <url>/ReDen-it/2021/02/26/</url>
    <content><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=886892272&cid=303122741&page=1&danmaku=0" allowfullscreen="allowfullscreen" width="100%" height="500" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>


<p> <a href="http://xchkoo.github.io/ReDen-it/2021/02/26/">http://xchkoo.github.io/ReDen-it/2021/02/26/</a> <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      <categories>
        <category>bilibili</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title>bilibili-无用各类游戏素材垃圾箱</title>
    <url>/bilibili-%E6%97%A0%E7%94%A8%E5%90%84%E7%B1%BB%E6%B8%B8%E6%88%8F%E7%B4%A0%E6%9D%90%E5%9E%83%E5%9C%BE%E7%AE%B1/2021/02/18/</url>
    <content><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=289131496&cid=299134491&page=1&danmaku=0" allowfullscreen="allowfullscreen" width="100%" height="500" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>


<p> <a href="http://xchkoo.github.io/bilibili-%E6%97%A0%E7%94%A8%E5%90%84%E7%B1%BB%E6%B8%B8%E6%88%8F%E7%B4%A0%E6%9D%90%E5%9E%83%E5%9C%BE%E7%AE%B1/2021/02/18/">http://xchkoo.github.io/bilibili-无用各类游戏素材垃圾箱/2021/02/18/</a> <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      <categories>
        <category>bilibili</category>
        <category>game</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
        <tag>game</tag>
      </tags>
  </entry>
  <entry>
    <title>初日上第九课笔记</title>
    <url>/japanese-learning-note-01/2021/02/08/</url>
    <content><![CDATA[

	<div class="row">
    <embed src="./note.pdf" width="100%" height="550" type="application/pdf">
	</div>




























<hr>
<blockquote><p>如果你的浏览器没有pdf插件<br>那它就是个垃圾</p>
<footer><strong>——XCHKOO</strong></footer></blockquote>
<p><img src="/japanese-learning-note-01/2021/02/08/note(1).jpg" alt="note(1)"><br><img src="/japanese-learning-note-01/2021/02/08/note(2).jpg" alt="note(2)"><br><img src="/japanese-learning-note-01/2021/02/08/note(3).jpg" alt="note(3)"><br><img src="/japanese-learning-note-01/2021/02/08/note(4).jpg" alt="note(4)"><br><img src="/japanese-learning-note-01/2021/02/08/note(5).jpg" alt="note(5)"></p>
<hr>
<p> <a href="http://xchkoo.github.io/japanese-learning-note-01/2021/02/08/">http://xchkoo.github.io/japanese-learning-note-01/2021/02/08/</a> <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      <categories>
        <category>日语</category>
        <category>学习笔记</category>
        <category>初级标准日本语</category>
      </categories>
      <tags>
        <tag>日语</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>[匈牙利算法-最小覆盖点]POJ3041题解</title>
    <url>/post1/2021/01/16/</url>
    <content><![CDATA[<h2 id="最小点覆盖"><a href="#最小点覆盖" class="headerlink" title="最小点覆盖"></a>最小点覆盖</h2><h4 id="例题-POJ3041"><a href="#例题-POJ3041" class="headerlink" title="例题: POJ3041"></a><font color="red" size="3">例题</font>: <a href="http://poj.org/problem?id=3041">POJ3041</a></h4><h4 id="理解：-有图G-U-V-，求删去最小点可删去所有边的步骤即求最小点覆盖的过程"><a href="#理解：-有图G-U-V-，求删去最小点可删去所有边的步骤即求最小点覆盖的过程" class="headerlink" title="理解： 有图G{U,V}，求删去最小点可删去所有边的步骤即求最小点覆盖的过程"></a><font color="red" size="3">理解</font>： 有图G{U,V}，求删去最小点可删去所有边的步骤即求最小点覆盖的过程</h4><hr>
<h5 id="二分图最大匹配的Konig定理及其证明-过于困难-gt-见-http-www-matrix67-com-blog-archives-116"><a href="#二分图最大匹配的Konig定理及其证明-过于困难-gt-见-http-www-matrix67-com-blog-archives-116" class="headerlink" title="二分图最大匹配的König定理及其证明(过于困难)-&gt;见[http://www.matrix67.com/blog/archives/116]"></a>二分图最大匹配的<font color="red" size="3">König定理</font>及其证明(过于困难)-&gt;见[<a href="http://www.matrix67.com/blog/archives/116]">http://www.matrix67.com/blog/archives/116]</a></h5><hr>
<h5 id="结论版-Konig定理"><a href="#结论版-Konig定理" class="headerlink" title="结论版 König定理 :"></a>结论版<font color="red" size="5"> König定理</font> :</h5><ol>
<li>由X侧匹配失败的一点回溯所有边（可见图） 并给走过的点打上标记</li>
<li>X侧未打标记的点和X对侧打标记的点集就是最小点覆盖</li>
</ol>
<h2 id><a href="#" class="headerlink" title></a><img src="/post1/2021/01/16/post1-img1.jpg" alt="post1-img1"></h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a><strong>代码:</strong></h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">500</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Max_Match</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">bool</span> g[maxn][maxn];</span><br><span class="line">    <span class="keyword">bool</span> vis[maxn];</span><br><span class="line">    <span class="keyword">int</span> left[maxn];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;n=n;</span><br><span class="line">        <span class="built_in">memset</span>(g,<span class="number">0</span>,<span class="keyword">sizeof</span>(g));</span><br><span class="line">        <span class="built_in">memset</span>(left,<span class="number">-1</span>,<span class="keyword">sizeof</span>(left));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">match</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">1</span>;v&lt;=n;v++)<span class="keyword">if</span>(g[u][v] &amp;&amp; !vis[v])</span><br><span class="line">        &#123;</span><br><span class="line">            vis[v]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(left[v]==<span class="number">-1</span> || match(left[v]))</span><br><span class="line">            &#123;</span><br><span class="line">                left[v]=u;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">            <span class="keyword">if</span>(match(i)) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;MM;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    MM.init(n);</span><br><span class="line">    <span class="keyword">while</span>(k--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u,v;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;u,&amp;v);</span><br><span class="line">        MM.g[u][v]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,MM.solve());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a><a href="https://zhuanlan.zhihu.com/p/96229700">参考博客</a></h5><p> <a href="http://xchkoo.github.io/post1/2021/01/16/">http://xchkoo.github.io/post1/2021/01/16/</a> <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      <categories>
        <category>图论</category>
        <category>匈牙利算法</category>
      </categories>
      <tags>
        <tag>题解</tag>
        <tag>图论</tag>
        <tag>匈牙利算法</tag>
        <tag>最小覆盖点</tag>
      </tags>
  </entry>
  <entry>
    <title>爷 有 片 头 了 ！！！</title>
    <url>/post2/2021/01/16/</url>
    <content><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=798539826&cid=279518850&page=1&danmaku=0" allowfullscreen="allowfullscreen" width="100%" height="500" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>

<p> <a href="http://xchkoo.github.io/post2/2021/01/16/">http://xchkoo.github.io/post2/2021/01/16/</a> <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      <categories>
        <category>bilibili</category>
        <category>csgo</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
        <tag>csgo</tag>
      </tags>
  </entry>
  <entry>
    <title>We have a simple ARG here!</title>
    <url>/post3/2021/01/16/</url>
    <content><![CDATA[<h2 id="0876"><a href="#0876" class="headerlink" title="0876***%"></a>0876***%</h2><p> <a href="http://xchkoo.github.io/post3/2021/01/16/">http://xchkoo.github.io/post3/2021/01/16/</a> <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      <tags>
        <tag>ARG</tag>
      </tags>
  </entry>
  <entry>
    <title>myplan</title>
    <url>/myplan/2021/03/31/</url>
    <content><![CDATA[<h1 id="学习计划"><a href="#学习计划" class="headerlink" title="学习计划"></a>学习计划</h1><ul>
<li><p>日语学习</p>
<blockquote>
<ol>
<li>目标完成初级上册的学习</li>
<li>目标看懂《游戏人生》日版1-2册</li>
<li>目标在洛谷翻译一道日语题</li>
</ol>
</blockquote>
</li>
<li><p>前端学习</p>
<blockquote>
<ol>
<li>hexo的博客更新</li>
<li>vue和react等主流框架的学习</li>
<li>项目的完善</li>
</ol>
</blockquote>
</li>
<li><p>算法学习</p>
<blockquote>
<ol>
<li><a href="https://www.luogu.com.cn/training/9391">https://www.luogu.com.cn/training/9391</a><br>综合题单的学习</li>
<li>线段树、ddp、倍增……</li>
</ol>
</blockquote>
</li>
<li><p>游戏框架学习</p>
<blockquote>
<ol>
<li>unity 2d</li>
<li>虚幻4 2d<br><a href="https://www.unrealengine.com/zh-CN/learn">https://www.unrealengine.com/zh-CN/learn</a></li>
</ol>
</blockquote>
</li>
<li><p>ae、pr学习</p>
</li>
<li><p>音乐制作学习</p>
</li>
</ul>
<p> <a href="http://xchkoo.github.io/myplan/2021/03/31/">http://xchkoo.github.io/myplan/2021/03/31/</a> <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      <categories>
        <category>计划</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>HowToComment</title>
    <url>/HowToComment/2021/03/31/</url>
    <content><![CDATA[<h1 id="ISSUE"><a href="#ISSUE" class="headerlink" title="ISSUE"></a>ISSUE</h1><p>diaspora的主题自带gitalk，可是先前一直没有办法显示.<br>会提示:</p>
<blockquote>
<p>“未找到相关的Issues进行评论 请联系@**** 初始化创建<br>“,点击”使用GitHub”登录的时候,跳回网站首页。</p>
</blockquote>
<h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>这个问题困扰了我很久，在<a herf="https://blog.csdn.net/Cirzearchenille/article/details/88802534">这个博客</a>里的实例给了解决方法.<br>问题在于github oauth app的一个选项<br>Authorization callback URL里应该是填cname的域名</p>
<blockquote>
<p>C A L L B A C K！<br><img src="/HowToComment/2021/03/31/callback.png" alt="callback"></p>
</blockquote>
<h1 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h1><p>总而言之，实现后效果是这样：<br><img src="/HowToComment/2021/03/31/CommentExample.png" alt="CommentExample"><br>效果很好，孩子很开心(｡･∀･)ﾉﾞ</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>hexo</category>
        <category>gitalk</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>hexo</tag>
        <tag>gitalk</tag>
      </tags>
  </entry>
  <entry>
    <title>我愿称之为超级缝合怪——本人2021代码规范</title>
    <url>/standards/2021/04/02/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>为防止coding过程中码风的不断切换导致的可读性差，本人特意编写了一套主要继承于python、go语法和GNU\LINUX规范的代码规范。</p>
<hr>

<p>本人(Xchkoo)代码规范应遵循以下条例:</p>
<h3 id="一、-color-darkviolet-首项"><a href="#一、-color-darkviolet-首项" class="headerlink" title="一、 $\color{darkviolet}{首项}$"></a>一、 $\color{darkviolet}{首项}$</h3><ol>
<li><p>所有左大括号都不应换行。</p>
</li>
<li><p>所有逗号后都应该有一个空格。</p>
</li>
<li><p>规定TAB == 4个空格，不应连续出现2个以上的空格。</p>
</li>
<li><p>代码块后应空一行，文件结束处应换行（遵循python规范）。</p>
</li>
<li><p>所有注释都应该是/* … */ 不能出现//。</p>
</li>
</ol>
<h3 id="二、-color-darkviolet-变量"><a href="#二、-color-darkviolet-变量" class="headerlink" title="二、 $\color{darkviolet}{变量}$"></a>二、 $\color{darkviolet}{变量}$</h3><ol>
<li><p>绝对不可出现毫无意义的缩写如next-&gt;nxt，但广为使用的number-&gt;num是合理的。</p>
</li>
<li><p>绝对不可用拼音命名变量（同理于函数和类）但是用日语罗马字应大加赞赏。</p>
</li>
<li><p>变量命名不提倡驼峰命名法，应使用蛇形命名法且只能使用_分割单词。（驼峰命名法应该在变量名过长有过多_时使用）注意！：-及——非法。</p>
</li>
</ol>
<h3 id="三、-color-darkviolet-函数和类"><a href="#三、-color-darkviolet-函数和类" class="headerlink" title="三、  $\color{darkviolet}{函数和类}$"></a>三、  $\color{darkviolet}{函数和类}$</h3><ol>
<li><p>函数应同理于python，在开头使用注释编写帮助文档：<br>/* 在此处写下帮助文档 */ 。</p>
</li>
<li><p>类中的变量和方法应该命名为“simplifiedClassName_name”。</p>
</li>
<li><p>类名应大写首字母。</p>
</li>
<li><p>不应使用《C++ primer》中不提倡的类用法。</p>
</li>
<li><p>应封装类中变量，提供接口。</p>
</li>
<li><p>类应尽量富鲁棒性。</p>
</li>
</ol>
<h3 id="四、-color-darkviolet-命名空间"><a href="#四、-color-darkviolet-命名空间" class="headerlink" title="四、 $\color{darkviolet}{命名空间}$"></a>四、 $\color{darkviolet}{命名空间}$</h3><p>  不应为了强行跟上C#而不使用全局命名空间，在oi题中已遵循剃刀原则即使用namespace std。</p>
<h4 id="Xchkoo-reserves-all-the-right-for-the-final-explanation"><a href="#Xchkoo-reserves-all-the-right-for-the-final-explanation" class="headerlink" title="*** Xchkoo reserves all the right for the final explanation ***"></a>*** <span align="center">Xchkoo reserves all the right for the final explanation </span>***</h4><p><img src="/standards/2021/04/02/1.webp" alt="配图"></p>
<p> <a href="http://xchkoo.github.io/standards/2021/04/02/">http://xchkoo.github.io/standards/2021/04/02/</a> 本作品采用<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可。</p>
]]></content>
      <categories>
        <category>coding</category>
        <category>code standards</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>code standards</tag>
      </tags>
  </entry>
</search>
